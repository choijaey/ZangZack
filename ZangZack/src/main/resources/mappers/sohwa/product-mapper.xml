<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kh.zangzac.sohwa.product.model.dao.ProductDAO">


	<insert id="insertProduct">
		<!-- order : insert/update를 하기 전에 selectKey를 수행할 것인지, 후에 수행할 것인지 (before : insert하기전에 수행) -->
	    <!-- keyProperty : 가져온 값을 필드에 대입하기 위해서 selectKey를 하는 것임. 어디에 집어넣을지를 적어놓어주는 곳 -->
		<selectKey order="BEFORE" resultType="_int" keyProperty="productNo">
			select product_seq.nextval from dual
		</selectKey>
		<!-- 이미 시퀀스로 하나 올려진 글번호를 prodcutNo필드에 대입을 했으므로 시퀀스 돌려주는게(product_seq.nextval) 아니라 productNo 넣어주면 된다. -->
		insert into product
		values (#{productNo}, #{productName}, #{productPrice}, sysdate, default, #{productScore}, #{categoryNo}, #{productCompany}, #{deliveryPrice}, #{eno})
	</insert>
	
	
	<insert id="insertProductPhoto">
	<!-- 유의해야할 점 : insert all안에서 시퀀스 사용하게 되면 시퀀스 한 번만 작동돼서
		     계속 같은 값을 내뱉음. 따라서, 그냥 photo_seq.nextval로 photo_no 지정하게 되면 무결성 제약조건 오류남. 
		     oracle로 가서 아래와 같이 함수 만들어준다.
		     
		     create or replace function new_aid
			 return number
			 is
			     new_aid number;
			 begin
			     select photo_seq.nextval
			     into new_aid
			     from dual;
			    
			     return new_aid;
			 end;-->
		insert all
		
		<foreach collection="list" item="item">
			into photo
			values (new_aid,  #{ item.photoRename }, #{item.photoPath}, #{item.photoLevel}, 5, #{item.boardNo}, default)
		</foreach>
		select * from dual
	</insert>
	
	
	
	
	
	<insert id="insertOption">
		<!-- 유의해야할 점 : insert all안에서 시퀀스 사용하게 되면 시퀀스 한 번만 작동돼서
	     계속 같은 값을 내뱉음. 따라서, 그냥 photo_seq.nextval로 photo_no 지정하게 되면 무결성 제약조건 오류남. 
	     oracle로 가서 아래와 같이 함수 만들어준다.
	     
	     create or replace function option_aid
		 return number
		 is
		     option_aid number;
		 begin
		     select product_option_seq.nextval
		     into option_aid
		     from dual;
		    
		     return option_aid;
		 end;-->
		insert all
		<foreach collection="list" item="item">
			into product_option
			values(option_aid, #{item.productOptionColor}, #{item.productOptionEno}, #{item.productNo})
		</foreach>
		select * from dual
		
	</insert>
	
	
	
	
	
	<select id="getListCount" resultType="_int">
		select count(*)
		from product
		where product_status = 'N'
		<if test="categoryNo != 0">
			and category_no=#{categoryNo}
		</if>
	</select>
	
	
	
	
	<select id="getListCountKeyword" resultType="_int">
		select count(*)
		from product
		where product_status = 'N' and product_name like '%${keyword}%'
	</select>
	
	
	
	<select id="searchProduct" resultType="Product">
		select *
		from product
			 JOIN camping_category using (category_no)
		where product_status = 'N' and product_name like '%${keyword}%'
	</select>
	
	<select id="searchPhoto" resultType="Attachment">
		select *
		from photo
			 join product on (board_no = product_no)
		where photo_status = 'N' and product_name like '%${keyword}%' and photo_level =0
	</select>
	
	
	
	<select id="selectProductList" resultType="Product">
		select *
		from product
			 JOIN camping_category using (category_no)
		where product_status = 'N'
		<if test="categoryNo != 0">
			and category_no = #{categoryNo}
		</if>
		<if test="standard==1">
			order by product_no desc
		</if>
		<if test="standard==2">
			order by product_price
		</if>
		<if test="standard==3">
			order by product_price desc
		</if>
		<if test="standard==4">
			order by product_score desc
		</if>
		
	</select>	
	
	
	
	
	<select id="selectPhotoList" resultType="Attachment">
		select *
		from photo
			 join product on (product_no = board_no)
		where photo_status = 'N' and photo_level = 0
		<if test="categoryNo != 0">
			and category_no = #{categoryNo}
		</if>
		order by board_no
	</select>
	
	
	
	<select id="selectProductDetail" resultType="Product">
		select *
		from product
		where product_status='N' and product_no = #{productNo}
	</select>
	
	
	<select id="selectPhotoDetail" resultType="Attachment">
		select *
		from photo
			 join product on (product_no = board_no)
		where board_no = #{productNo}
	</select>
	
	<select id="optionDetail" resultType="Option">
		select *
		from product_option
		where product_no = #{productNo}
	</select>
	
</mapper>